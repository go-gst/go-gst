// Code generated by girgen. DO NOT EDIT.

package gstnet

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/go-gst/go-gst/pkg/gst"
)

// #include <stdlib.h>
// #include <gst/net/net.h>
import "C"

//export _gotk4_gstnet1_PtpStatisticsCallback
func _gotk4_gstnet1_PtpStatisticsCallback(arg1 C.guint8, arg2 *C.GstStructure, arg3 C.gpointer) (cret C.gboolean) {
	var fn PtpStatisticsCallback
	{
		v := gbox.Get(uintptr(arg3))
		if v == nil {
			panic(`callback not found`)
		}
		fn = v.(PtpStatisticsCallback)
	}

	var _domain byte          // out
	var _stats *gst.Structure // out

	_domain = byte(arg1)
	_stats = (*gst.Structure)(gextras.NewStructNative(unsafe.Pointer(arg2)))

	ok := fn(_domain, _stats)

	var _ bool

	if ok {
		cret = C.TRUE
	}

	return cret
}
