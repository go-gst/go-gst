// Code generated by girgen. DO NOT EDIT.

package gstcheck

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	"github.com/diamondburned/gotk4/pkg/glib/v2"
)

// #include <stdlib.h>
// #include <gst/check/check.h>
import "C"

//export _gotk4_gstcheck1_CheckLogFilterFunc
func _gotk4_gstcheck1_CheckLogFilterFunc(arg1 *C.gchar, arg2 C.GLogLevelFlags, arg3 *C.gchar, arg4 C.gpointer) (cret C.gboolean) {
	var fn CheckLogFilterFunc
	{
		v := gbox.Get(uintptr(arg4))
		if v == nil {
			panic(`callback not found`)
		}
		fn = v.(CheckLogFilterFunc)
	}

	var _logDomain string            // out
	var _logLevel glib.LogLevelFlags // out
	var _message string              // out

	_logDomain = C.GoString((*C.gchar)(unsafe.Pointer(arg1)))
	_logLevel = glib.LogLevelFlags(arg2)
	_message = C.GoString((*C.gchar)(unsafe.Pointer(arg3)))

	ok := fn(_logDomain, _logLevel, _message)

	var _ bool

	if ok {
		cret = C.TRUE
	}

	return cret
}
